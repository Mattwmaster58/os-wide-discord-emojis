copyq:
// noinspection JSUnresolvedReference

    const EMOJI_DIR = "/AppData/Local/universal-discord-emojis/universal-discord-emojis";
const EMOJI_LOAD_LIMIT = 25;
const TAB_NAME = "Universal Emoji";

function emojiSearch(term) {
    paths = [];
    console.time("emoji search");
    for (let fname of Dir(EMOJI_DIR).entryList()) {
        if (fname.endsWith(".gif") || fname.endsWith(".png")) {
            const [guild, name, extension] = fname.split(".");
            const score = scoreMatch(term, guild, name);
            if (score > 0) {
                paths.push({
                    path: EMOJI_DIR + "/" + fname,
                    guild,
                    name,
                    extension,
                    score,
                });
                if (paths.length > EMOJI_LOAD_LIMIT) {
                    break;
                }
            }
        }
    }
    console.timeEnd("emoji search");
    paths.sort((a, b) => {
        const [c1a, c1b] = [a.score, b.score];
        const c2 = a.name.localeCompare(b.name);
        const c3 = a.guild.localeCompare(b.guild);
        return (c1a - c1b) || c2 || c3;
    });
    return paths
}

function scoreMatch(term, guild, name) {
    let score = 0;
    name = name.toLowerCase();
    guild = guild.toLowerCase();
    term = term.toLowerCase();
    if (name.startsWith(term)) {
        score = 4;
    } else if (name.includes(term)) {
        score = 3;
    } else if (guild.startsWith(term)) {
        score = 2;
    } else if (guild.includes(term)) {
        score = 1;
    }
    return score;
}

function emojiObjToTab(emojiObjs, tabName) {
    tab(tabName);
    for (const emojiObj of emojiObjs) {
        console.debug("loading:", JSON.stringify(emojiObj));
        const emojiFile = new File(emojiObj.path);
        if (!emojiFile.openReadOnly()) {
            throw `failed to open Emoji file ${emojiObj.path}, quitting early`;
            // noinspection UnreachableCodeJS
            // i think we continue through errors in Qt's runtime, thus this is reachable

            break;
        }
        const emojiBytes = emojiFile.readAll();
        console.debug(`read bytes ${emojiBytes.length} ${JSON.stringify({[`image/${emojiObj.extension}`]: "test"})}`);
        let payload = {
            "application/x-copyq-tags": `${emojiObj.name},${emojiObj.guild},${emojiObj.extension}`,
            [`image/${emojiObj.extension}`]: emojiBytes
        };
        insert(0, payload);
    }
}

const emojiSearchTerm = dialog(
    ...['.title', "Search Emoji"],
    "Enter emoji search term",
);

const emojis = emojiSearch(emojiSearchTerm);
show();
const lastTab = selectedTab();
console.log(`loading ${emojis.length} ${lastTab}`);
emojiObjToTab(emojis, TAB_NAME);
show(TAB_NAME);
sleep(5000);
removeTab(TAB_NAME);